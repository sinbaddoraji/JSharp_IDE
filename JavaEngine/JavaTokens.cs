namespace JavaEngine
{
    internal class JavaTokens
    {
        public static Token[] Tokens = new Token[]
        {
            new Token("abstract", false),
            new Token("assert", false),
            new Token("boolean", false),
            new Token("break", false),
            new Token("byte", false),
            new Token("case", false),
            new Token("catch", false),
            new Token("char", false),
            new Token("class", false),
            new Token("const", false),
            new Token("default", false),
            new Token("do", false),
            new Token("double", false),
            new Token("else", false),
            new Token("enum", false),
            new Token("extends", false),
            new Token("final", false),
            new Token("finally", false),
            new Token("float", false),
            new Token("for", false),
            new Token("if", false),
            new Token("goto", false),
            new Token("implements", false),
            new Token("import", false),
            new Token("instanceof", false),
            new Token("int", false),
            new Token("interface", false),
            new Token("long", false),
            new Token("native", false),
            new Token("new", false),
            new Token("package", false),
            new Token("private", false),
            new Token("protected", false),
            new Token("public", false),
            new Token("return", false),
            new Token("short", false),
            new Token("static", false),
            new Token("strictfp", false),
            new Token("super", false),
            new Token("switch", false),
            new Token("synchronized", false),
            new Token("this", false),
            new Token("throw", false),
            new Token("throws", false),
            new Token("transient", false),
            new Token("try", false),
            new Token("void", false),
            new Token("volatile", false),
            new Token("while", false),
            new Token("(", false),
            new Token(", false)", false),
            new Token("{", false),
            new Token("}", false),
            new Token("[", false),
            new Token("]", false),
            new Token(";", false),
            new Token(", ", false),
            new Token(".", false),
            new Token("=", false),
            new Token(">", false),
            new Token("<", false),
            new Token("!", false),
            new Token("~", false),
            new Token("?", false),
            new Token(":", false),
            new Token("==", false),
            new Token("<=", false),
            new Token(">=", false),
            new Token("!=", false),
            new Token("&&", false),
            new Token("||", false),
            new Token("++", false),
            new Token("--", false),
            new Token("+", false),
            new Token("-", false),
            new Token("*", false),
            new Token("/", false),
            new Token("&", false),
            new Token("|", false),
            new Token("^", false),
            new Token("%", false),
            new Token("+=", false),
            new Token("-=", false),
            new Token("*=", false),
            new Token("/=", false),
            new Token("&=", false),
            new Token("|=", false),
            new Token("^=", false),
            new Token("%=", false),
            new Token("<<=", false),
            new Token(">>=", false),
            new Token(">>>=", false),
            new Token("->", false),
            new Token("::", false),
            new Token("@", false),
            new Token("...", false),
            new Token(@"(\w+)\[(.*)\]", true),
            new Token(@"(\w+)\<(.*)\>", true),
            new Token(@"(\w+)\((.*?)\)", true),
            new Token("\\\".*\"",true),
            new Token("(.*)\\;", true)
        };
    }
}